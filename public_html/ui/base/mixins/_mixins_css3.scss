// ******************************************************************************
// * css3 features
// *****************************************************************************/
@mixin my-animation($params) {
    @if $ie > 8 {
        -moz-animation: $params;
        -ms-animation: $params;
        -o-animation: $params;
        -webkit-animation: $params;
        animation: $params;
    }
}

@mixin my-border-radius($param) {
    @if $ie > 8 {
        @include border-radius($param);
    }
}

@mixin my-box-shadow($shadow1, $shadow2: false, $shadow3: false, $shadow4: false, $ieTodo: true) {
    @if $ie > 8 {
        $shadow: compact($shadow1, $shadow2, $shadow3, $shadow4);
        @include box-shadow($shadow);
    } @else if $ieTodo == true {
    }
}

@mixin my-filter-gray($var: 100%) {
    -webkit-filter: grayscale($var);
    -moz-filter: grayscale($var);
    filter: grayscale($var);
    @if $var == 0 {
        filter: none;
    } @else {
        /* Firefox 3.5+ */
        filter: url("data:image/svg+xml;utf8,<svg xmlns=\'http://www.w3.org/2000/svg\'><filter id=\'grayscale\'><feColorMatrix type=\'matrix\' values=\'0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0\'/></filter></svg>#grayscale");
        filter: gray;
    }
}

@mixin my-keyframes($name) {
    @-webkit-keyframes #{$name} {
        @content;
    }
    @-moz-keyframes #{$name} {
        @content;
    }
    @-o-keyframes #{$name} {
        @content;
    }
    @-ms-keyframes #{$name} {
        @content;
    }
    @keyframes #{$name} {
        @content;
    }
}

@mixin my-linear-gradient($colors...) {
    @if $ie < 10 {
        @include filter-gradient(nth($colors, 1), nth($colors, 2));
    } @else {
        @include background-image(linear-gradient($colors));
    }
}

// Media Queries
// $type 'max', 'min'
// $value number, percentage
@mixin my-media-queries($type, $value) {
    @if $ie > 8 {
        @media screen and (#{$type}-width: $value) {
            @content;
        }
    }
}

@mixin my-placeholder($color) {
    @if $ie > 9 {
        &:-moz-placeholder {
            color: $color;
            @content;
        }
        &::-moz-placeholder {
            color: $color;
            @content;
        }
        &:-ms-placeholder {
            color: $color;
            @content;
        }
        &::-webkit-input-placeholder {
            color: $color;
            @content;
        }
        &::placeholder {
            color: $color;
            @content;
        }

    } @else {
        &.placeholder {
            color: $color;
            @content;
        }
    }
}

@mixin my-rotate($degrees) {
    @if $ie > 8 {
        @include rotate(#{$degrees}deg);
    } @else {
        $degrees: $degrees * 3.14 / 180;

        @if $ie < 8 {
            filter: progid:DXImageTransform.Microsoft.Matrix(sizingMethod='auto expand', M11=#{cos($degrees)}, M12=#{sin($degrees) * -1}, M21=#{sin($degrees)}, M22=#{cos($degrees)});
        } @else {
            -ms-filter: "progid:DXImageTransform.Microsoft.Matrix(sizingMethod='auto expand', M11=#{cos($degrees)}, M12=#{sin($degrees) * -1}, M21=#{sin($degrees)}, M22=#{cos($degrees)})";
        }
        zoom: 1;
    }
}

@mixin my-text-shadow($param) {
    @if $ie > 9 {
        @include text-shadow($param);
    }
}

@mixin my-transform-origin($param...) {
    @if $ie > 8 {
        @include transform-origin(nth($param, 1), nth($param, 2));
    }
}

@mixin my-transition($transitions...) {
    @if $ie > 8 {
        @include transition($transitions);
    }
}
